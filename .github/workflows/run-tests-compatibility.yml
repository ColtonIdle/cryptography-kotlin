name: Run compatibility tests
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: compatibility-tests
  cancel-in-progress: false

jobs:
  generate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        target: [ 'jvmAll', 'js', 'native' ]
        include:
          - os: 'macos-latest'
            target: 'macos'
          - os: 'macos-latest'
            target: 'ios'
          - os: 'macos-latest'
            target: 'watchos'
          - os: 'macos-latest'
            target: 'tvos'
          - os: 'windows-latest'
            target: 'native'
          - os: 'macos-latest'
            target: 'android-21'
            api-level: 21
          - os: 'macos-latest'
            target: 'android-27'
            api-level: 27
          - os: 'macos-latest'
            target: 'android-33'
            api-level: 33
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-gradle
        with:
          cache-read-only: true

      - name: Run tests
        if: ${{ !startsWith(matrix.target, 'android-') }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            cryptography-providers-tests-compatibility:${{ matrix.target }}Test
            -Ptests.compatibility.step=Generate
            -Ptesttool.instanceId=${{ matrix.os }}-${{ matrix.target }}
            --continue
            --configuration-cache

      - name: Run tests (android)
        if: ${{ startsWith(matrix.target, 'android-') }}
        uses: ./.github/actions/run-android-emulator-tests
        with:
          api-level: ${{ matrix.api-level }}
          project-path: "cryptography-providers-tests-compatibility:"
          additional-arguments: -Ptests.compatibility.step=Generate -Ptesttool.instanceId=${{ matrix.os }}-${{ matrix.target }}

      #      - name: Dump testtool server-storage
      #        uses: gradle/gradle-build-action@v2
      #        with:
      #          arguments: |
      #            dumpTesttoolServerStorage
      #            -Ptesttool.instanceId=${{ matrix.os }}-${{ matrix.target }}
      - name: Upload testtool server-storage dump
        uses: actions/upload-artifact@v4
        with:
          name: compatibility-tests-data-${{ matrix.os }}-${{ matrix.target }}
          path: build/testtool/server-storage/*.db
          if-no-files-found: error

  validate:
    needs: [ generate ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        target: [ 'jvmAll', 'js', 'native' ]
        include:
          - os: 'macos-latest'
            target: 'macos'
          - os: 'macos-latest'
            target: 'ios'
          - os: 'macos-latest'
            target: 'watchos'
          - os: 'macos-latest'
            target: 'tvos'
          - os: 'windows-latest'
            target: 'native'
          - os: 'macos-latest'
            target: 'android-21'
            api-level: 21
          - os: 'macos-latest'
            target: 'android-27'
            api-level: 27
          - os: 'macos-latest'
            target: 'android-33'
            api-level: 33
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-gradle
        with:
          cache-read-only: true

      - name: Download testtool server-storage dump
        uses: actions/download-artifact@v4
        with:
          pattern: compatibility-tests-data-*
          path: build/testtool/server-storage
          merge-multiple: true

      #      - name: Restore testtool server-storage
      #        uses: gradle/gradle-build-action@v2
      #        with:
      #          arguments: restoreTesttoolServerStorage

      - name: Run tests
        if: ${{ !startsWith(matrix.target, 'android-') }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            cryptography-providers-tests-compatibility:${{ matrix.target }}Test
            -Ptests.compatibility.step=Validate
            -Ptesttool.instanceId=${{ matrix.os }}-${{ matrix.target }}
            --continue
            --configuration-cache

      - name: Run tests (android)
        if: ${{ startsWith(matrix.target, 'android-') }}
        uses: ./.github/actions/run-android-emulator-tests
        with:
          api-level: ${{ matrix.api-level }}
          project-path: "cryptography-providers-tests-compatibility:"
          additional-arguments: -Ptests.compatibility.step=Validate -Ptesttool.instanceId=${{ matrix.os }}-${{ matrix.target }}

  merge:
    needs: [ generate ]
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-gradle
        with:
          cache-read-only: true

      - name: Download testtool server-storage
        uses: actions/download-artifact@v4
        with:
          pattern: compatibility-tests-data-*
          path: build/testtool/server-storage
          merge-multiple: true

      - name: Restore testtool server-storage
        uses: gradle/gradle-build-action@v2
        with:
          arguments: mergeTesttoolServerStorage

      - name: Upload testtool server-storage
        uses: actions/upload-artifact@v4
        with:
          name: all-compatibility-tests-data
          path: build/testtool/server-storage/all.db
          if-no-files-found: error
